-	script	Warper	-1,{
function Go; function Disp; function Pick; function Restrict;

// --------------------------------------------------
//	Main Menu:
// --------------------------------------------------
	mes "[ Warper ]";
	//mes "^0000FF{ขณะนี้มีคนออนไลน์ ^FF0000"+$@PLAYER+"^0000FF คน}^000000";
	mes "วันนี้วันที่ :^FF0000 "+ gettimestr("%d/%m/%y",19) +"^000000";
	mes "เวลา :^FF0000 "+ gettimestr("%H:%M",19) +"^000000";
	mes "กรุณาเลือกเมนูที่คุณต้องการ";
	mes "คุณสามารถใช้คำสั่ง ^FF0000@load^000000";
	mes "เพื่อกลับไปยังจุดเซฟ นะค่ะ^_^";
menu	"^FF0000^000000 วาร์ปล่าสุด ^777777["+lastwarp$+"]^000000",-,
    	"^FF0000^000000 เมือง",Towns,
    	"^FF0000^000000 พื้นที่ ฟิลด์",Fields,
    	"^FF0000^000000 ดันเจี้ยน",Dungeons,
    	"^FF0000^000000 ปราสาท กิลด์",Castles,
    	"^FF0000^000000 ดันเจี้ยน กิลด์",Guild_Dungeons,
		"^FF0000^000000 ดันเจี้ยน พิเศษ",Instances,
		"^FF0000^000000 ห้อง PVP",Pvp;
//		"^FF0000^000000 Instances ^ff0000Boss^000000",Instances2,
//    	"^FF0000^000000 Instances ^ff0000New^000000",Instances,
//    	"^FF0000^000000 พื้นที่ พิเศษ",Special;

	if (lastwarp$ == "")
		message strcharinfo(0),"ขออภัยด้วยค่ะ แต่คุณยังไม่แผนที่วาร์ปล่าสุด.";
	else
		warp lastwarp$,lastwarpx,lastwarpy;
	end;

// ------------------- Functions -------------------
// * Go("<map>",<x>,<y>);
//	~ Warps directly to a map.
//
// * Disp("<Menu Option>",<first option>,<last option>);
// * Pick("<map_prefix>"{,<index offset>});
//	~ Dynamic menu and map selection (auto-numbered).
//	~ Fields and Dungeons must use Disp and Pick Functions.
//
// * Disp("<Option 1>:<Option 2>:<etc.>");
// * Pick("","<map1>","<map2>","<etc.>");
//	~ Manual menu and map selection (listed).
//
// * Restrict("<RE | Pre-RE>"{,<menu option numbers>});
//	~ Only allows map for Renewal or Pre-Renewal modes.
//     If menu option numbers are given, only those maps
//     will be restricted (i.e. not for "Go").
//
// Other notes:
//   ~ Array @c[] holds all (x,y) coordinates.
//   ~ Use @c[2] EXCEPT when maps begin dynamically
//	  at 0: use @c[0] and Pick() offset 1.
// --------------------------------------------------

function Go {
	set lastwarp$, getarg(0);
	set lastwarpx, getarg(1,0);
	set lastwarpy, getarg(2,0);
	warp getarg(0),getarg(1,0),getarg(2,0);
	end;
}
function Disp {
	if (getargcount() < 3)
		set @menu$, getarg(0);
	else {
		set @menu$,"";
		for (set .@i,getarg(1); .@i<=getarg(2); set .@i,.@i+1)
			set @menu$, @menu$+getarg(0)+" "+.@i+":";
	}
	return;
}
function Pick {
	set .@warp_block,@warp_block;
	set @warp_block,0;
	if((@f && .OnlyFirstFld) || (@d && .OnlyFirstDun)){
		set .@select,1;
		if(.@warp_block){
			while(.@warp_block & (1<<.@select)){
				.@select += 1;
			}
		}
	}else{
		set .@select, select(@menu$);
	}
	if (getarg(0) == "") {
		set .@i, .@select;
		set .@map$, getarg(.@i);
	} else {
		set .@i, .@select-getarg(1,0);
		set .@map$, getarg(0)+((.@i<10)?"0":"")+.@i;
	}
	if (.@warp_block & (1<<.@select)) {
		message strcharinfo(0),"สถานที่นี้ยังไม่เปิดในระบบ "+((checkre(0))?"":"Pre-")+"Renewal.";
		end;
	}
	set .@x, @c[.@i*2];
	set .@y, @c[.@i*2+1];
	deletearray @c[0],getarraysize(@c);
	@f = false; @d = false;
	Go(.@map$,.@x,.@y);
}
function Restrict {
	if ((getarg(0) == "RE" && !checkre(0)) || (getarg(0) == "Pre-RE" && checkre(0))) {
		if (getarg(1,0)) {
			set @warp_block,0;
			for (set .@i,1; .@i<getargcount(); set .@i,.@i+1)
				set @warp_block, @warp_block | (1<<getarg(.@i));
		} else {
			message strcharinfo(0),"สถานที่นี้ยังไม่เปิดในระบบ "+((checkre(0))?"":"Pre-")+"Renewal.";
			end;
		}
	}
	return;
}

// --------------------------------------------------
	Towns:
// --------------------------------------------------
menu	"Prontera",T1,
		"Alberta",T2, "Aldebaran",T3, "Amatsu",T4, "Ayothaya",T5,
    	"Comodo",T7,"Einbech",T10, 
    	"Einbroch",T11,"Geffen",T13, "Gonryun",T14, "Hugel",T15,
    	"Izlude",T16,"Lighthalzen",T19, "Louyang",T20,
		"Lutie",T21,"Morroc",T27,
		"Nameless Island",T29, "Niflheim",T30, "Payon",T31, "Rachel",T32,
		"Thor Camp",T34, "Umbala",T35, "Veins",T36, "Yuno",T37;

T0: Restrict("RE");
	Go("ba_maison",123,129);
T01: Restrict("RE");
	Go("1@bamn",0,0);
T02: Restrict("RE");
	Go("sp_cor",165,89);
T1: Go("prontera",155,183);
T2: Go("alberta",28,234);
T3: Go("aldebaran",140,131);
T4: Go("amatsu",198,84);
T5: Go("ayothaya",208,166);
T6: Restrict("RE");
	Go("brasilis",196,217);
T7: Go("comodo",209,143);
T8: Restrict("RE");
	Go("dewata",200,180);
T9: Restrict("RE");
	Go("ecl_in01",48,53);
T10: Go("einbech",63,35);
T11: Go("einbroch",64,200);
T12: Restrict("RE");
	 Go("dicastes01",198,187);
T13: Go("geffen",119,59);
T14: Go("gonryun",160,120);
T15: Go("hugel",96,145);
T16: Go("izlude",128,(checkre(3)?146:114));
T17: Go("jawaii",251,132);
T18: Restrict("RE");
	 Go("lasagna",193,182);
T19: Go("lighthalzen",158,92);
T20: Go("louyang",217,100);
T21: Go("xmas",147,134);
T22: Restrict("RE");
	 Go("malangdo",140,114);
T23: Restrict("RE");
	 Go("malaya",231,200);
T24: Go("manuk",282,138);
T25: Go("mid_camp",210,288);
T26: Restrict("RE");
	 Go("mora",55,146);
T27: Go("morocc",156,93);
T28: Go("moscovia",223,184);
T29: Go("nameless_n",256,215);
T30: Go("niflheim",202,174);
T31: Go("payon",179,100);
T32: Go("rachel",130,110);
T33: Go("splendide",201,147);
T34: Go("thor_camp",246,68);
T35: Go("umbala",97,153);
T36: Go("veins",216,123);
T37: Go("yuno",157,51);

// --------------------------------------------------
	Fields:
// --------------------------------------------------
@f = true;
menu	"Amatsu Fields",F1, "Ayothaya Fields",F2,
    	"Comodo Fields",F5, 
    	"Einbroch Fields",F8,"El Dicastes Field",F9,
    	"Geffen Fields",F10, "Gonryun Fields",F11, "Hugel Fields",F12,
		"Lighthalzen Fields",F14, "Louyang Field",F15, 
		"Lutie Field",F16, "Manuk Fields",F18, 
		"Mjolnir Fields",F19, "Moscovia Fields",F20, "Niflheim Fields",F21, 
		"Payon Forests",F22, "Prontera Fields",F23, "Rachel Fields",F24, 
		"Sograt Deserts",F25, "Umbala Fields",F27, 
		"Veins Fields",F28, "Yuno Fields",F29;

F1: setarray @c[2],190,197;
	Disp("Amatsu Field",1,1); Pick("ama_fild");
F2: setarray @c[2],173,134,212,150;
	Disp("Ayothaya Field",1,2); Pick("ayo_fild");
F3: Restrict("RE");
	setarray @c[2],193,220,220,187;
	Disp("Bifrost Field",1,2); Pick("bif_fild");
F4: Restrict("RE");
	setarray @c[2],74,32;
	Disp("Brasilis Field",1,1); Pick("bra_fild");
F5: Restrict("Pre-RE",5);
	setarray @c[2],180,178,231,160,191,172,228,194,224,203,190,223,234,177,194,175,172,172;
	Disp("Comodo Field",1,9); Pick("cmd_fild");
F6: Restrict("RE");
	setarray @c[2],371,212;
	Disp("Dewata Field",1,1); Pick("dew_fild");
F7: Restrict("RE");
	setarray @c[2],97,314;
	Disp("Eclage Field",1,1); Pick("ecl_fild");
F8: Restrict("Pre-RE",2,10);
	setarray @c[2],142,225,182,141,187,228,185,173,216,173,195,148,272,220,173,214,207,174,196,200;
	Disp("Einbroch Field",1,10); Pick("ein_fild");
F9: Restrict("Pre-RE");
	setarray @c[2],143,132,143,217;
	Disp("El Dicastes Field",1,2); Pick("dic_fild");
F10: Restrict("Pre-RE",13,15);
	 setarray @c[0],46,199,213,204,195,212,257,192,188,171,166,263,248,158,195,191,186,183,221,117,178,218,136,328,240,181,235,235,211,185;
	 Disp("Geffen Field",0,14); Pick("gef_fild",1);
F11: setarray @c[2],220,227;
	 Disp("Gonryun Field",1,1); Pick("gon_fild");
F12: Restrict("Pre-RE",3,7);
	 setarray @c[2],268,101,222,193,232,185,252,189,196,106,216,220,227,197;
	 Disp("Hugel Field",1,7); Pick("hu_fild");
F13: Restrict("RE");
	 setarray @c[2],344,371,20,98;
	 Disp("Lasagna Field",1,2); Pick("lasa_fild");	 
F14: setarray @c[2],240,179,185,235,240,226;
	 Disp("Lighthalzen Field",1,3); Pick("lhz_fild");
F15: setarray @c[2],229,187;
	 Disp("Louyang Field",1,1); Pick("lou_fild");
F16: setarray @c[2],115,145;
	 Disp("Lutie Field",1,1); Pick("xmas_fild");
F17: Restrict("RE");
	 setarray @c[2],40,272,207,180;
	 Disp("Malaya Field",1,2); Pick("ma_fild");
F18: setarray @c[2],35,236,35,262,84,365;
	 Disp("Manuk Field",1,3); Pick("man_fild");
F19: setarray @c[2],204,120,175,193,208,213,179,180,181,240,195,270,235,202,188,215,205,144,245,223,180,206,196,208;
	 Disp("Mjolnir Field",1,12); Pick("mjolnir_");
F20: setarray @c[2],82,104,131,147;
	 Disp("Moscovia Field",1,2); Pick("mosk_fild");
F21: setarray @c[2],215,229,167,234;
	 Disp("Niflheim Field",1,2); Pick("nif_fild");
F22: Restrict("Pre-RE",5,11);
	 setarray @c[2],158,206,151,219,205,148,186,247,134,204,193,235,200,177,137,189,201,224,160,205,194,150;
	 Disp("Payon Forest",1,11); Pick("pay_fild");
F23: setarray @c[0],208,227,190,206,240,206,190,143,307,252,239,213,185,188,193,194,187,218,210,183,195,149,198,164;
	 Disp("Prontera Field",0,11); Pick("prt_fild",1);
F24: Restrict("Pre-RE",2,7,9,10,11,13);
	 setarray @c[2],192,162,235,166,202,206,202,208,225,202,202,214,263,196,217,201,87,121,277,181,221,185,175,200,174,197;
	 Disp("Rachel Field",1,13); Pick("ra_fild");
F25: if(.Satan_Morroc){
	 setarray @c[2],219,205,177,206,194,182,224,170,198,216,156,187,185,263,206,228,208,238,209,223,85,97,207,202,31,195,38,195;
	 Disp("Sograt Desert 1:Sograt Desert 2:Sograt Desert 3:Sograt Desert 7:Sograt Desert 11:Sograt Desert 12:Sograt Desert 13:Sograt Desert 16:Sograt Desert 17:Sograt Desert 18:Sograt Desert 19:Sograt Desert 20:Sograt Desert 21:Sograt Desert 22");
	 Pick("","moc_fild01","moc_fild02","moc_fild03","moc_fild07","moc_fild11","moc_fild12","moc_fild13","moc_fild16","moc_fild17","moc_fild18","moc_fild19","moc_fild20","moc_fild21","moc_fild22");
	 }else{
	 setarray @c[2],219,205,177,206,194,182,146,297,204,197,275,302,224,170,139,123,101,110,341,39,198,216,156,187,185,263,223,222,170,257,206,228,208,238,209,223,85,97;
	 Disp("Sograt Desert",1,19); Pick("moc_fild");
	 }
F26: setarray @c[2],175,186,236,184,188,204;
	 Disp("Splendide Field",1,3); Pick("spl_fild");
F27: setarray @c[2],217,206,223,221,237,215,202,197;
	 Disp("Umbala Field",1,4); Pick("um_fild");
F28: Restrict("Pre-RE",5);
	 setarray @c[2],186,175,196,370,222,45,51,250,202,324,150,223,149,307;
	 Disp("Veins Field",1,7); Pick("ve_fild");
F29: Restrict("Pre-RE",5,10);
	 setarray @c[2],189,224,192,207,221,157,226,199,223,177,187,232,231,174,196,203,183,214,200,124,195,226,210,304;
	 Disp("Yuno Field",1,12); Pick("yuno_fild");

// --------------------------------------------------
	Dungeons:
// --------------------------------------------------
@d = true;
menu	"Abyss Lakes",D1, "Amatsu Dungeon",D2, "Anthell",D3,
    	"Ayothaya Dungeon",D4, "Beach Dungeon",D5,
    	"Bio Labs",D6,"Brasilis Dungeon",D7, "Byalan Dungeon",D8, "Clock Tower",D9,
    	"Coal Mines",D10, "Culvert",D11, "Cursed Abbey",D12,
    	"Einbroch Dungeon",D14, "Gefenia",D15, "Geffen Dungeon",D16,
    	"Glast Heim",D17, "Gonryun Dungeon",D18, "Hidden Dungeon",D19,
    	"Ice Dungeon",D20, "Juperos",D21, "Kiel Dungeon",D22,
		"Louyang Dungeon",D24, "Magma Dungeon",D25,
		"Moscovia Dungeon",D27, "Nidhogg's Dungeon",D28, "Odin Temple",D29,
		"Orc Dungeon",D30, "Payon Dungeon",D31, "Pyramids",D32, "Rachel Sanctuary",D33,
    	"Sphinx",D35, "Sunken Ship",D36, "Thanatos Tower",D37,
    	"Thor Volcano",D38, "Toy Factory",D39, "Turtle Dungeon",D40, "Umbala Dungeon",D41;

D01: setarray @c[2],0,0,0,0;
	Disp("^ff0000Amicitia F1 [ Lv 215+ ]^000000:^ff0000Amicitia F2 [ Lv 215+ ]^000000");
	Pick("","ra_san06","ra_san07");
D1: setarray @c[2],261,272,275,270,116,27,0,0;
	Disp("Abyss Lakes F1:Abyss Lakes F2:Abyss Lakes F3");
	Pick("","abyss_01","abyss_02","abyss_03","abyss_04");
D2: setarray @c[2],228,11,34,41,119,14;
	Disp("Amatsu Dungeon",1,3); Pick("ama_dun");
D3: setarray @c[2],35,262,168,170;
	Disp("Anthell",1,2); Pick("anthell");
D4: setarray @c[2],275,19,24,26;
	Disp("Ancient Shrine Maze:Inside Ancient Shrine"); Pick("ayo_dun");
D5: setarray @c[2],266,67,255,244,23,260;
	Disp("Beach Dungeon",1,3); Pick("","beach_dun","beach_dun2","beach_dun3");
D6: Restrict("RE",4);
	setarray @c[2],150,288,150,18,140,134,244,52,99,202;
	Disp("Bio Lab F1:Bio Lab F2:Bio Lab F3");
	Pick("","lhz_dun01","lhz_dun02","lhz_dun03","lhz_dun04","lhz_dun_n");
D7: Restrict("Pre-RE");
	setarray @c[2],87,47,262,262;
	Disp("Brasilis Dungeon",1,2); Pick("bra_dun");
D8: Restrict("RE",6);
	setarray @c[0],168,168,253,252,236,204,32,63,26,27,141,187;
	Disp("Byalan Dungeon",1,5); Pick("iz_dun",1);
D9: setarray @c[2],199,159,148,283,65,147,56,155,297,25,127,169,277,178,268,74;
	Disp("Clock Tower 1:Clock Tower 2:Clock Tower 3:Clock Tower 4:Basement 1:Basement 2:Basement 3:Basement 4");
	Pick("","c_tower1","c_tower2","c_tower3","c_tower4","alde_dun01","alde_dun02","alde_dun03","alde_dun04");
D10: setarray @c[2],52,17,381,343,302,262;
	 Disp("Coal Mines",1,3); Pick("mjo_dun");
D11: setarray @c[2],131,247,19,19,180,169,100,92;
	 Disp("Culvert",1,4); Pick("","prt_sewb1","prt_sewb2","prt_sewb3","prt_sewb4");
D12: setarray @c[2],51,14,150,11,120,10;
	 Disp("Cursed Abbey",1,3); Pick("abbey");
D13: Restrict("RE");
	 setarray @c[2],285,160,299,29;
	 Disp("Dewata Dungeon",1,2); Pick("dew_dun");
D14: setarray @c[2],22,14,292,290,268,278;
	Disp("Einbroch Mine Dungeon F1:Einbroch Mine Dungeon F2");
	Pick("","ein_dun01","ein_dun02","ein_dun03");
D15: setarray @c[2],40,103,203,34,266,168,130,272;
	 Disp("Gefenia",1,4); Pick("gefenia",0);
D16: setarray @c[0],104,99,115,236,106,132,203,200;
	 Disp("Geffen Dungeon",1,4); Pick("gef_dun",1);
D17: setarray @c[2],370,304,199,29,104,25,150,15,157,287,147,15,258,255,108,291,171,283,68,277,156,7,12,7,133,271,224,274,14,70,150,14,200,27;
	 Disp("Entrance:Castle 1:Castle 2:Chivalry 1:Chivalry 2:Churchyard:Culvert 1:Culvert 2:Culvert 3:Culvert 4:St. Abbey:Staircase Dungeon:Underground Cave 1:Underground Cave 2:Underground Prison 1:Underground Prison 2");
	 Pick("","glast_01","gl_cas01","gl_cas02","gl_knt01","gl_knt02","gl_chyard","gl_sew01","gl_sew02","gl_sew03","gl_sew04","gl_church","gl_step","gl_dun01","gl_dun02","gl_prison","gl_prison1","gl_cas01_");
D18: setarray @c[2],153,53,28,113,68,16;
	 Disp("Gonryun Dungeon",1,3); Pick("gon_dun");
D19: setarray @c[2],176,7,93,20,23,8;
	 Disp("Hidden Dungeon",1,3); Pick("prt_maze");
D20: setarray @c[2],157,14,151,155,149,22,33,158;
	 Disp("Ice Dungeon",1,3); Pick("ice_dun");
D21: setarray @c[2],140,51,53,247,37,63,150,285;
	 Disp("Entrance:Juperos 1:Juperos 2:Core");
	 Pick("","jupe_cave","juperos_01","juperos_02","jupe_core");
D22: setarray @c[2],28,226,41,198;
	 Disp("Kiel Dungeon",1,2); Pick("kh_dun");
D23: Restrict("RE");
	 setarray @c[2],24,143,22,171,190,18;
	 Disp("Lasagna Dungeon",1,3); Pick("lasa_dun");
D24: setarray @c[2],218,196,282,20,165,38;
	 Disp("The Royal Tomb:Inside the Royal Tomb:Suei Long Gon"); Pick("lou_dun");
D25: setarray @c[2],126,68,47,30,124,116;
	 Disp("Magma Dungeon F1:Magma Dungeon F2");
	 Pick("","mag_dun01","mag_dun02","mag_dun03");
D26: Restrict("RE");
	 setarray @c[2],33,230;
	 Disp("Malangdo Dungeon",1,1); Pick("mal_dun");
D27: setarray @c[2],189,48,165,30,32,135;
	 Disp("Moscovia Dungeon",1,3); Pick("mosk_dun");
D28: setarray @c[2],61,239,60,271;
	 Disp("Nidhogg's Dungeon",1,2); Pick("nyd_dun");
D028: setarray @c[2],0,0,0,0;
	 Disp("^ff0000Niflheim Dungeon F1 [ Lv 200+ ]^000000:^ff0000Niflheim Dungeon F2 [ Lv 200+ ]^000000");
	 Pick("","1@haunt","haunt_h");
D29: setarray @c[2],298,167,224,149,266,280;
	 Disp("Odin Temple 1:Odin Temple 2:Odin Temple 3");
	 Pick("","odin_tem01","odin_tem02","odin_tem03","odin_past");
D30: setarray @c[2],32,170,21,185;
	 Disp("Orc Dungeon",1,2); Pick("orcsdun");
D31: setarray @c[0],21,183,19,33,19,63,155,159,201,204;
	 Disp("Payon Dungeon",1,5); Pick("pay_dun",1);
D32: Restrict("RE",7,8);
	 setarray @c[2],192,9,10,192,100,92,181,11,94,96,192,8,94,96,192,8;
	 Disp("Pyramids 1:Pyramids 2:Pyramids 3:Pyramids 4:Basement 1:Basement 2");
	 Pick("","moc_pryd01","moc_pryd02","moc_pryd03","moc_pryd04","moc_pryd05","moc_pryd06","moc_prydn1","moc_prydn2");
D33: setarray @c[2],140,11,32,21,8,149,204,218,150,9;
	 Disp("Rachel Sanctuary",1,5); Pick("ra_san");
D34: Restrict("RE");
	 setarray @c[2],364,44,101,141;
	 Disp("Scaraba Hole",1,2); Pick("dic_dun");
D35: setarray @c[2],288,9,149,81,210,54,10,222,100,99;
	 Disp("Sphinx",1,5); Pick("","in_sphinx1","in_sphinx2","in_sphinx3","in_sphinx4","in_sphinx5");
D36: setarray @c[2],69,24,102,27;
	 Disp("Sunken Ship",1,2); Pick("treasure");
D37: setarray @c[2],150,39,150,136,220,158,59,143,62,11,89,221,35,166,93,148,29,107,159,138,19,20,130,52;
	 Disp("Thanatos Tower",1,12); Pick("tha_t");
D38: setarray @c[2],21,228,75,205,34,272;
	 Disp("Thor Volcano",1,3); Pick("thor_v");
D39: setarray @c[2],205,15,129,133;
	 Disp("Toy Factory",1,2); Pick("xmas_dun");
D40: setarray @c[2],154,49,148,261,132,189,100,192;
	 Disp("Entrance:Turtle Dungeon 1:Turtle Dungeon 2:Turtle Dungeon 3"); Pick("tur_dun");
D41: Restrict("Pre-RE",1,2);
	 setarray @c[2],42,31,48,30,204,78;
	 Disp("Carpenter's Shop in the Tree:Passage to a Foreign World:Hvergermil's Fountain");
	 Pick("","um_dun01","um_dun02","yggdrasil01");
D42: Restrict("RE");
	 setarray @c[2],57,13,64,88,45,14,26,23;
	 Disp("Bifrost Tower",1,4); Pick("ecl_tdun");

// --------------------------------------------------
	Castles:
// --------------------------------------------------
menu	"Aldebaran Castles",C1, "Geffen Castles",C2, "Payon Castles",C3,
    	"Prontera Castles",C4;

C1: setarray @c[2],142,85;
	Disp("Nuenberg");
	Pick("","alde_gld","alde_gld","alde_gld","alde_gld","alde_gld");
C2: setarray @c[2],193,278;
	Disp("Bergel");
	Pick("","gef_fild13","gef_fild13","gef_fild13","gef_fild13","gef_fild13");
C3: setarray @c[2],121,233,295,116,317,293,140,160,204,266;
	Disp("Bright Arbor");
	Pick("","pay_gld","pay_gld","pay_gld","pay_gld","pay_gld");
C4: setarray @c[2],134,65,240,128,153,137,111,240,208,240;
	Disp("Kriemhild");
	Pick("","prt_gld","prt_gld","prt_gld","prt_gld","prt_gld");
C5: setarray @c[2],158,272,83,47,68,155,299,345,292,107;
	Disp("Mardol:Cyr:Horn:Gefn:Banadis");
	Pick("","aru_gld","aru_gld","aru_gld","aru_gld","aru_gld");
C6: setarray @c[2],293,100,288,252,97,196,137,90,71,315;
	Disp("Himinn:Andlangr:Viblainn:Hljod:Skidbladnir");
	Pick("","sch_gld","sch_gld","sch_gld","sch_gld","sch_gld");
C7: Restrict("RE");
	setarray @c[2],48,83,95,249,142,85,239,242,264,90;
	Disp("Kafragarten 1:Kafragarten 2:Kafragarten 3:Kafragarten 4:Kafragarten 5");
	Pick("","te_alde_gld","te_alde_gld","te_alde_gld","te_alde_gld","te_alde_gld");
C8: Restrict("RE");
	setarray @c[2],134,65,240,128,153,137,111,240,208,240;
	Disp("Gloria 1:Gloria 2:Gloria 3:Gloria 4:Gloria 5");
	Pick("","te_prt_gld","te_prt_gld","te_prt_gld","te_prt_gld","te_prt_gld");
	
// --------------------------------------------------
	Guild_Dungeons:
// --------------------------------------------------
menu	"Baldur",G1, "Luina",G2, "Valkyrie",G3, "Britoniah",G4,
    	"Arunafeltz",G5, "Schwaltzvalt",G6, "Kafragarten",G7,
		"Gloria",G8;

G1: Restrict("RE",2,3);
	setarray @c[2],119,93,119,93,120,130;
	Disp("Baldur F1:Baldur F2:Hall of Abyss");
	Pick("","gld_dun01","gld_dun01_2","gld2_pay");
G2: Restrict("RE",2,3);
	setarray @c[2],39,161,39,161,147,155;
	Disp("Luina F1:Luina F2:Hall of Abyss");
	Pick("","gld_dun02","gld_dun02_2","gld2_ald");
G3: Restrict("RE",2,3);
	setarray @c[2],50,44,50,44,140,132;
	Disp("Valkyrie F1:Valkyrie F2:Hall of Abyss");
	Pick("","gld_dun03","gld_dun03_2","gld2_prt");
G4: Restrict("RE",2,3);
	setarray @c[2],116,45,116,45,152,118;
	Disp("Britoniah F1:Britoniah F2:Hall of Abyss");
	Pick("","gld_dun04","gld_dun04_2","gld2_gef");
G5: Go("arug_dun01",199,195);
G6: Go("schg_dun01",200,124);
G7: Restrict("RE");
	Go("teg_dun01",42,36);
G8: Restrict("RE");
	Go("teg_dun02",26,160);
// --------------------------------------------------
	Instances2:
// --------------------------------------------------
menu	"Endless Tower",IS1, "Horror Toy Factory",IS2, "Bakonawa Lake",IS3,
		"Airship Assault",IS4, "Bangungot Hospital",IS5, "Buwaya Cave",IS6,
		"Central Laboratory",IS7, "Devil Tower",IS8, "Eclage Instance",IS9,
		"Faceworm's Nest",IS10, "Geffen Magic Tournament",IS11, "Ghost Palace",IS12,
		"Hazy Forest",IS13, "Room of Consciousness",IS14, "Isle Of Bios",IS15,
		"The Last Room",IS16, "Malangdo Culvert",IS17, "Morse Cave",IS18,
		"Nightmarish Jitterbug",IS19, "Nidhoggr's Nest",IS20, "Octopus Cave",IS21,
		"Old Glast Heim",IS22, "Orc's Memory",IS23, "Ritual of Blessing",IS24, "Wolfchev's Laboratory",IS25,
		"Sara's Memory",IS26, "Sarah and Fenrir",IS27, "Sealed Shrine",IS28, "Sky Fortress",IS29;

IS1: Go("alberta",218,77);
IS2: Go("xmas",235,298);
IS3: Go("ma_scene01",174,174);
IS4: Go("dali02",137,83);
IS5: Go("ma_dun01",150,6);
IS6: Go("ma_fild02",316,315);
IS7: Go("verus01",151,150);
IS8: Go("dali02",137,117);
IS9: Go("ecl_hub01",128,12);
IS10: Go("payon",156,49);
IS11: Go("dali",95,145);
IS12: Go("dali02",45,133);
IS13: Go("bif_fild01",158,335);
IS14: Go("1@mir",101,35);
IS15: Go("moro_cav",50,57);
IS16: Go("un_myst",158,38);
IS17: Go("mal_in01",165,27);
IS18: Go("moro_cav",61,65);
IS19: Go("moc_para01",27,89);
IS20: Go("nyd_dun02",97,197);
IS21: Go("mal_dun01",152,231);
IS22: Go("glast_01",205,269);
IS23: Go("gef_fild10",242,198);
IS24: Go("2@mir",101,14);
IS25: Go("lighthalzen",206,299);
IS26: Go("dali",130,103);
IS27: Go("dali02",92,141);
IS28: Go("monk_test",305,145);
IS29: Go("prt_q",242,81);

// --------------------------------------------------
	Pvp:
// --------------------------------------------------
menu	"Inzlude [^FF0000"+(getmapusers("pvp_y_3-2"))+"^000000] คน",P1,
		"Arena [^FF0000"+(getmapusers("pvp_n_8-5"))+"^000000] คน",P2;
P1: Go("pvp_y_3-2",0,0);
P2: Go("pvp_n_8-5",0,0);
// --------------------------------------------------
	Instances:
// --------------------------------------------------
menu	"Endless Tower",Z1,"Battle Pass ^FF0000[Battle Pass Lv.4 ขึ้นไป]^000000",Z2;
Z1: Go("e_tower",77,109);

Z2:
next;
.@account_id = getcharid(3);
query_sql("SELECT `level` FROM `premium_pass` WHERE `account_id` = '"+.@account_id+"'",.@lv);
if(.@lv > 3){ 
	bonus_script "if(strcharinfo(3) == \"verus02\"){bonus2 bDropAddRace,RC_All,2*.@lv; bonus2 bAddClass,Class_All,2*.@lv; bonus bMatkRate,2*.@lv;}",999999,9;
	Go("verus02",0,0);end; 
	}
else{ mes "ขอโทษด้วย Level Battle Pass ไม่ถึง 4"; end; }
	
	
/*menu	"Bakonawa Lake",I1, "Bangungot Hospital 2F",I2, "Buwaya Cave",I3,
		"Nightmare Clock Tower",I03,"Devil Tower",I4, "Eclage Interior",I5, "Endless Tower",I6,
		"Faceworms Nest",I7, "Geffen Magic Tournament",I8, "Ghost Palace",I9,
		"Hazy Forest",I10, "Horror Toy Factory",I11, "Malangdo Culvert",I12,
		"Nidhoggur's Nest",I13, "Octopus Cave",I14, "Old Glast Heim",I15,
		"Orc's Memory",I16, "Sarah and Fenrir",I17, "Sara Memory",I18,
		"Sealed Shrine",I19, "Wolfchev's Laboratory",I20, "^ff0000Illusion of Moonlight^000000",I21,
		"^ff0000Illusion of Frozen^000000",I22, "^ff0000Illusion of Vampire^000000",I23, "^ff0000Illusion of Abyss^000000",I24,
		"^ff0000Illusion of Teddy Bear^000000",I25, "^ff0000Illusion of Luanda^000000",I26, "^ff0000Illusion of Labyrinth^000000",I27,
		"^ff0000Illusion of Underwater^000000",I28,"^ff0000Varmundt's Mansion Instances^000000",I29,"^ff0000Special Security Mission^000000",I30;

I1: Restrict("RE");
	Go("ma_scene01",172,175);
I2: Restrict("RE");
	Go("ma_dun01",151,8);
I3: Restrict("RE");
	Go("ma_fild02",316,317);
I03: setarray @c[2],0,0,0,0;
	Disp("Nightmare Clock Tower F2:^ff0000Nightmare Clock Tower F3^000000");
	Pick("","c_tower2_","c_tower3_");
I4: Restrict("RE");
	Go("dali02",137,115);
I5: Restrict("RE");
	Go("ecl_hub01",129,12);
I6: Go("e_tower",72,112);
I7: Restrict("RE");
	Go("dali",85,64);
I8: Restrict("RE");
	Go("dali",94,141);
I9: Restrict("RE");
	Go("dali02",46,128);
I10: Restrict("RE");
	Go("bif_fild01",161,334);
I11: Restrict("RE");
	Go("xmas",234,298);
I12: Restrict("RE");
	Go("mal_in01",164,21);
I13: Go("nyd_dun02",95,193);
I14: Restrict("RE");
	Go("mal_dun01",152,230);
I15: Restrict("RE");
	Go("glast_01",204,268);
I16: Go("gef_fild10",240,198);
I17: Restrict("RE");
	Go("dali02",92,141);
I18: Restrict("RE");
	Go("dali",133,108);
I19: Go("monk_test",306,143);
I20: Restrict("RE");
	Go("lhz_dun04",148,269);
I21: Restrict("RE");
	Go("pay_d03_i",154,42);
I22: Restrict("RE");
	Go("ice_d03_i",153,37);
I23: Restrict("RE");
	Go("gef_d01_i",120,88);
I24: Restrict("RE");
	Go("tur_d03_i",131,191);
I25: Restrict("RE");
	Go("ein_d02_i",161,83);
I26: Restrict("RE");
	Go("com_d02_i",252,244);
I27: Restrict("RE");
	Go("prt_mz03_i",153,37);
I28: setarray @c[2],130,227,141,188;
	Disp("^ff0000Illusion of Underwater F1^000000:^ff0000Illusion of Underwater F2^000000");
	Pick("","iz_d04_i","iz_d05_i");
I29: setarray @c[2],160,13,160,13,276,16,12,116,158,24,338,334,165,34;
	Disp("^ff0000Memmory Corridor^000000:^ff0000Large Meditatio Bath^000000:^ff00001st Power Plant^000000:^ff00002nd Power Plant^000000:^ff0000Sewage Treatment Plant^000000:^ff0000Upper Floor of Tartaros Storage^000000:^ff0000Lower Floor of Tartaros Storage^000000:^ff0000Lost Farm Valley^000000");
	Pick("","ba_lib","ba_bath","ba_pw01","ba_pw03","ba_pw02","ba_2whs01","ba_2whs02","ba_lost");
I30: setarray @c[2],323,299,141,188,0,0,0,0,0,0;
	Disp("OS Mission:Cor Mission:^ff0000Laboratory Waste Disposal Plant Rudus F1^000000:^ff0000Laboratory Waste Disposal Plant Rudus F2^000000:^ff0000Laboratory Waste Disposal Plant Rudus F3^000000:^ff0000Laboratory Waste Disposal Plant Rudus F4^000000");
	Pick("","1@os_a","1@cor","sp_rudus","sp_rudus2","sp_rudus3","sp_rudus5");*/
// --------------------------------------------------
	Special:
// --------------------------------------------------
menu	"Auction Hall",S1, "Battlegrounds",S2, "Casino",S3, "Dimensional Rift",S4,
		"Eden Group Headquarters",S5, "Gonryun Arena",S6, "Izlude Arena",S7, 
		"Monster Race Arena",S8, "Para Market",S9, "Turbo Track",S10;

S1: Go("auction_01",22,68);
S2: Go("bat_room",154,150);
S3: Go("cmd_in02",179,129);
S4: Restrict("RE");
	Go("dali",113,82);	
S5: Restrict("RE");
	Go("moc_para01",31,14);
S6: Go("gon_test",48,10);
S7: Go("arena_room",100,88);
S8: Go("p_track01",62,41);
S9: Restrict("RE");
	Go("paramk",97,17);
S10: Go("turbo_room",99,114);

OnInit:
	//waitingroom "Warp",0;
	.Satan_Morroc = true;	//	false will enable moc_fild 4,5,6,8,9,10,14,15 while disable moc_fild 20,21,22 Default is true.
	.OnlyFirstFld = false;	//	true will teleport to the first level of the Fields  Default is false.
	.OnlyFirstDun = false;	//	true will teleport to the first level of the Dungeons  Default is false.
}
// --------------------------------------------------
//	Duplicates:
// --------------------------------------------------
morocc,163,97,4	duplicate(Warper)	บริการเคลื่อนย้าย#01	640
morocc,229,100,4	duplicate(Warper)	บริการเคลื่อนย้าย#02	640
morocc,235,163,4	duplicate(Warper)	บริการเคลื่อนย้าย#03	640
morocc,286,210,4	duplicate(Warper)	บริการเคลื่อนย้าย#04	640
morocc,279,75,4	duplicate(Warper)	บริการเคลื่อนย้าย#05	640
morocc,109,111,4	duplicate(Warper)	บริการเคลื่อนย้าย#06	640
morocc,88,173,4	duplicate(Warper)	บริการเคลื่อนย้าย#07	640
morocc,44,185,4	duplicate(Warper)	บริการเคลื่อนย้าย#08	640
morocc,161,288,4	duplicate(Warper)	บริการเคลื่อนย้าย#09	640